# Final Project Team 4
library(shiny)
library(dplyr)
# data from International Labor Organization on unemployment from 1990 to 2015,
# broken down by country, gender, age group, urban/rural, year
# NOTE: Can't figure out how to make a general and shortened file path for some reason...
source('./scripts/choro_map_creation_function.R')
source('./scripts/choro_map_data_function.R')
source('./scripts/scatter1_creation_function.R')
source('./scripts/scatter1_data_function.R')
source('./scripts/bar_creation_function.R')
source('./scripts/bar_data_function.R')
df <- read.csv("./data/ilodata.csv", stringsAsFactors = FALSE)
shinyServer(function(input, output) {
# Render a plotly object that returns your scatter on the UI's radio button and select indicator
output$GlobalMap <- renderPlotly({
return(
WorldMap(
FilterMapData(df,
input$radio2,
input$radio1,
input$slider2[1],
input$slider2[2],
input$select
)
)
)
})
output$ComboUnemployment <- renderPlotly({
return(
UrbanRuralScatter(
UnemployedScatter(df,
input$slider2[1],
input$slider2[2],
input$radio1,
input$select
)
)
)
})
output$Bar1 <- renderPlotly({
return(
UnemploymentBar(
BarData(df,
input$select2,
input$radio3
)
)
)
})
})
source('./scripts/choro_map_creation_function.R')
getwd()
setwd("C:\Users\gebiz\Desktop\finalproject\scripts")
setwd("C:/Users/gebiz/Desktop/finalproject/scripts")
getwd()
# Final Project Team 4
library(shiny)
library(dplyr)
# data from International Labor Organization on unemployment from 1990 to 2015,
# broken down by country, gender, age group, urban/rural, year
# NOTE: Can't figure out how to make a general and shortened file path for some reason...
source('./scripts/choro_map_creation_function.R')
source('./scripts/choro_map_data_function.R')
source('./scripts/scatter1_creation_function.R')
source('./scripts/scatter1_data_function.R')
source('./scripts/bar_creation_function.R')
source('./scripts/bar_data_function.R')
df <- read.csv("./data/ilodata.csv", stringsAsFactors = FALSE)
shinyServer(function(input, output) {
# Render a plotly object that returns your scatter on the UI's radio button and select indicator
output$GlobalMap <- renderPlotly({
return(
WorldMap(
FilterMapData(df,
input$radio2,
input$radio1,
input$slider2[1],
input$slider2[2],
input$select
)
)
)
})
output$ComboUnemployment <- renderPlotly({
return(
UrbanRuralScatter(
UnemployedScatter(df,
input$slider2[1],
input$slider2[2],
input$radio1,
input$select
)
)
)
})
output$Bar1 <- renderPlotly({
return(
UnemploymentBar(
BarData(df,
input$select2,
input$radio3
)
)
)
})
})
source('./scripts/choro_map_creation_function.R')
setwd("C:/Users/gebiz/Desktop/finalproject")
source('./scripts/choro_map_data_function.R')
source('./scripts/choro_map_creation_function.R')
# Final Project Team 4
library(shiny)
library(dplyr)
# data from International Labor Organization on unemployment from 1990 to 2015,
# broken down by country, gender, age group, urban/rural, year
# NOTE: Can't figure out how to make a general and shortened file path for some reason...
source('./scripts/choro_map_creation_function.R')
source('./scripts/choro_map_data_function.R')
source('./scripts/scatter1_creation_function.R')
source('./scripts/scatter1_data_function.R')
source('./scripts/bar_creation_function.R')
source('./scripts/bar_data_function.R')
df <- read.csv("./data/ilodata.csv", stringsAsFactors = FALSE)
shinyServer(function(input, output) {
# Render a plotly object that returns your scatter on the UI's radio button and select indicator
output$GlobalMap <- renderPlotly({
return(
WorldMap(
FilterMapData(df,
input$radio2,
input$radio1,
input$slider2[1],
input$slider2[2],
input$select
)
)
)
})
output$ComboUnemployment <- renderPlotly({
return(
UrbanRuralScatter(
UnemployedScatter(df,
input$slider2[1],
input$slider2[2],
input$radio1,
input$select
)
)
)
})
output$Bar1 <- renderPlotly({
return(
UnemploymentBar(
BarData(df,
input$select2,
input$radio3
)
)
)
})
})
runApp()
runApp()
runApp()
View(UnemploymentBar)
library(shiny)
library(plotly)
df <- read.csv("./data/ilodata.csv", stringsAsFactors = FALSE)
only.countries <- select(df, Country_Label) %>% unique()
only.ages <- select(df, Classif1_Item_Label) %>% unique()
shinyUI(fluidPage(
tabsetPanel(
tabPanel("International Labor Organization - Visualized",
sidebarLayout(
sidebarPanel(
radioButtons("radio1","Gender",
choices = list("Female",
"Male",
"Total"),
selected = "Total"),
radioButtons("radio2", "Area",
choices = list("Rural",
"Urban",
"National"),
selected = "National"),
sliderInput("slider2", "Slider Range",
min = min(df$Time),
max = max(df$Time),
value = c(1995, 1996),
round = TRUE,
step = 1,
animate = TRUE
),
selectInput("select",
label = h3("Select an Age Range"),
choices = only.ages,
selected = only.ages[1])
),
mainPanel(
plotlyOutput("GlobalMap"),
plotlyOutput("ComboUnemployment")
)
)
),
tabPanel("International Labor Scatterplot",
sidebarLayout(
sidebarPanel(
selectInput("select2",
label = h3("Select a Country"),
choices = only.countries,
selected = only.countries[1]),
radioButtons("radio3", "Area",
choices = list("Rural",
"Urban",
"National"),
selected = "National")
),
mainPanel(
plotlyOutput("Bar1")
)
)
)
)
)
)
runApp()
library(plotly)
library(dplyr)
UnemploymentBar <- function(df) {
gender.hist <- plot_ly(df,
x = ~Time,
y = ~male.mean,
type = "bar",
name = "Male Unemployment Percentage",
color = "Blue") %>%
add_trace(
y = ~female.mean,
name = "Female Unemployment Percentage",
color = "Pink") %>%
add_trace(
y = ~total.mean,
name = "Total Unemployment Percentage",
color = "Orange") %>%
layout(yaxis = list(title = "Percentage Unemployedst"),
xaxis = list(title = "Year"),
barmode = "group")
return(gender.hist)
}
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
