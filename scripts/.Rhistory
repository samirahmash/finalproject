base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url, per.page, tokenCode)
data.repo <- fromJSON(query.data.repos)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url, per.page, tokenCode)
data.repo <- fromJSON(query.data.repos)
}
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url, pe
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url, per.page)
data.repo <- fromJSON(query.data.repos)
}
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos)
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, tokenCode)
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos)
clearPushBack()
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos)
}
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, tokenCode)
}
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, tokenCode)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, tokenCode)
}
data.repo
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
}
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '?page=1&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '?page=1&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
}
per.page <- '?page=1&per_page=100'
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '?page=1&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
}
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '?page=1&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
}
data.repo.frame <- flatten(data.repo)
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repoa <- fromJSON(query.data.repos, per.page, tokenCode)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
}
data.repo.frame <- flatten(data.repo)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
}
data.repo.frame <- flatten(data.repo$owner)
data.repo.frame <- flatten(data.repo$owner)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
data.repo.frame <- flatten(data.repo$owner)
}
data.repo.frame <- flatten(data.repo$owner)
data.repo.frame <- flatten(data.repo$owner$repos_url)
data.repo.frame <- flatten(data.$owner$repos_url)
data.repo.frame <- flatten(data.repo$forks_count)
View(data)
---
title: "Untitled"
output: html_document
---
```{r setup, include=FALSE}
### Exercise 5 ###
library(jsonlite)
library(dplyr)
# Write a function that allows you to specify a movie, then does the following:
GetReview <- function(movie) {
# Replace all of the spaces in your movie title with plus signs (+)
movie.no.spaces <- gsub(' ', '+', movie)
# Construct a search query using YOUR api key
# The base URL is https://api.nytimes.com/svc/movies/v2/reviews/search.json?
# See the interactive console for more detail:https://developer.nytimes.com/movie_reviews_v2.json#/Console/GET/reviews/search.json
base.url <- 'https://api.nytimes.com/svc/movies/v2/reviews/search.json?'
api.key <- "&api-key=2d3963db35bb4d0f88f17a193b8c62e8"
request <- paste0(base.url, 'query=', movie.no.spaces, api.key)
# Request data using your search query
results <- fromJSON(request)
# What type of variable does this return?
# Flatten the data stored in the `$results` key of the data returned to you
flattened <- flatten(results$results)
# From the most recent review, store the headline, short summary, and link to full article each in their own variables
first.review <- flattened[1,]
headline <- first.review$headline
summary <- first.review$summary_short
link <- first.review$link.url
# Return an list of the three pieces of information from above
info <- list(headline=headline, summary=summary, link=link)
return(info)
}
# Test that your function works with a movie of your choice
AlmostFamousInfo <- GetReview('Almost Famous')
Contact GitHub API Training Shop Blog About
© 2016 GitHub, Inc. Terms Privacy Security Status Help
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "Untitled"
output: html_document
---
```{r setup, include=FALSE}
### Exercise 5 ###
library(jsonlite)
library(dplyr)
# Write a function that allows you to specify a movie, then does the following:
GetReview <- function(movie) {
# Replace all of the spaces in your movie title with plus signs (+)
movie.no.spaces <- gsub(' ', '+', movie)
# Construct a search query using YOUR api key
# The base URL is https://api.nytimes.com/svc/movies/v2/reviews/search.json?
# See the interactive console for more detail:https://developer.nytimes.com/movie_reviews_v2.json#/Console/GET/reviews/search.json
base.url <- 'https://api.nytimes.com/svc/movies/v2/reviews/search.json?'
api.key <- "&api-key=2d3963db35bb4d0f88f17a193b8c62e8"
request <- paste0(base.url, 'query=', movie.no.spaces, api.key)
# Request data using your search query
results <- fromJSON(request)
# What type of variable does this return?
# Flatten the data stored in the `$results` key of the data returned to you
flattened <- flatten(results$results)
# From the most recent review, store the headline, short summary, and link to full article each in their own variables
first.review <- flattened[1,]
headline <- first.review$headline
summary <- first.review$summary_short
link <- first.review$link.url
# Return an list of the three pieces of information from above
info <- list(headline=headline, summary=summary, link=link)
return(info)
}
# Test that your function works with a movie of your choice
AlmostFamousInfo <- GetReview('Almost Famous')
Contact GitHub API Training Shop Blog About
© 2016 GitHub, Inc. Terms Privacy Security Status Help
```
---
title: "Untitled"
output: html_document
---
```{r setup, include=FALSE}
### Exercise 5 ###
library(jsonlite)
library(dplyr)
# Write a function that allows you to specify a movie, then does the following:
GetReview <- function(movie) {
# Replace all of the spaces in your movie title with plus signs (+)
movie.no.spaces <- gsub(' ', '+', movie)
# Construct a search query using YOUR api key
# The base URL is https://api.nytimes.com/svc/movies/v2/reviews/search.json?
# See the interactive console for more detail:https://developer.nytimes.com/movie_reviews_v2.json#/Console/GET/reviews/search.json
base.url <- 'https://api.nytimes.com/svc/movies/v2/reviews/search.json?'
api.key <- "&api-key=2d3963db35bb4d0f88f17a193b8c62e8"
request <- paste0(base.url, 'query=', movie.no.spaces, api.key)
# Request data using your search query
results <- fromJSON(request)
# What type of variable does this return?
# Flatten the data stored in the `$results` key of the data returned to you
flattened <- flatten(results$results)
# From the most recent review, store the headline, short summary, and link to full article each in their own variables
first.review <- flattened[1,]
headline <- first.review$headline
summary <- first.review$summary_short
link <- first.review$link.url
# Return an list of the three pieces of information from above
info <- list(headline=headline, summary=summary, link=link)
return(info)
}
# Test that your function works with a movie of your choice
AlmostFamousInfo <- GetReview('Almost Famous')
```
data.repo.frame <- flatten(data.repo$data.repo)
##install.packages("devtools")
##devtools::install_github("rstudio/rmarkdown")
library(jsonlite)
library(dplyr)
##setwd('~/Documents/info-201/a5-github-report-mackmor13/')
user <- 'mbostock'
#function to get user data
GetUserInfo <- function(user) {
base <- 'https://api.github.com/users/'
query.url <- paste0(base, user)
data <- fromJSON(query.url)
repo.url <- data$repos_url
tokenCode <- '&access_token=d2cc0bc44e550d826daeed75dd77f7770ec1314a'
per.page <- '&per_page=100'
query.data.repos <- paste0(repo.url)
data.repo <- fromJSON(query.data.repos, per.page, tokenCode)
data.repo.frame <- flatten(data.repo$data.repo)
num_repo <- data
most_popular <-
}
num_repo <- data$public_repos[1]
num_repo
---
title: "USA Shooting"
output: html_document
---
```{r}
setwd('~/info-201/a6-mapping-shootings-mackmor13/')
Shootings <- read.csv(./data/Mass-Shooting-Data.csv)
```
## R Markdown
The shooings in the USA have...
setwd('~/info-201/a6-mapping-shootings-mackmor13/')
Shootings <- read.csv(./data/Mass-Shooting-Data.csv)
##setwd('~/info-201/a6-mapping-shootings-mackmor13/')
runApp('Info_201/a8-building-apps-mackmor13')
### Exercise 2 ###
library(shiny)
df <- data("iris")
shinyServer(function(input, output) {
# You can access the value of the widget with input$select, e.g.
output$scatter <- renderPlot({
x <- rnorm(input$num)
y <- rnorm(input$num)
return(plot(x,y, col=input$color))
})
})
runApp('Info_201/a8-building-apps-mackmor13')
runApp('Info_201/a8-building-apps-mackmor13')
install.packages("shiny")
install.packages("shiny")
library(plotly)
library(stringr)
BuildScatter <- function(data, scatter.x, scatter.y) {
#This turns the variable we inputed back into data
xvariable <- paste0('~', scatter.x)
yvariable <- paste0('~', scatter.y)
xaxis <- gsub(".", " ", scatter.x, fixed = TRUE)
yaxis <- gsub(".", " ", scatter.y, fixed = TRUE)
#Graphs the plotly scatter point graph with variables as the X and Y axis, allowing you to change what you compare.
p <- plot_ly(data = data, x = eval(parse(text = xvariable)), y = eval(parse(text = yvariable)), type="scatter", mode = 'markers') %>%
layout(title = "Labor?",
#Sets the axis labels and range ( range = c(0, 8))
xaxis = list(title = xaxis),
yaxis = list(title = yaxis))
return(p)
}
library(dplyr)
library(dplyr)
data <- read.csv("../data/ilodata.csv", stringsAsFactors = FALSE)
data <- read.csv("../data/ilodata.csv")
setwd("~/Info_201/finalproject")
setwd("~/Info_201/finalproject")
library(dplyr)
dataFinal <- read.csv("../data/ilodata.csv")
dataFinal <- read.csv("../data/ilodata.csv")
library(dplyr)
dataFinal <- read.csv("../data/ilodata.csv", stringsAsFactors = FALSE)
dataFinal <- read.csv("../data/ilodata.csv", stringsAsFactors = FALSE)
library(dplyr)
dataFinal <- read.csv("../data/ilodata.csv", stringsAsFactors = FALSE)
library(dplyr)
setwd("~/Info_201/finalproject/scripts")
dataFinal <- read.csv("../data/ilodata.csv", stringsAsFactors = FALSE)
data <- read.csv("./data/ilodata.csv")
getwd()
